#! /usr/bin/env python
# @Created by Jose Fernandez
'''
Created on Jun 18, 2012

@author: jfn

This scripts reads a file generated by Fido and generates a tab delimited file containing all the proteins
'''


import os
import getopt
import sys
import generalUtils as utils
        
def usage():
    print "this script generates a tab delimited output for proteins from a fido output file"
    print "Usage : parseFido.py <output_fido.txt> [-o, --output <output.txt>] [-p, --pattern <prefix>] [-h, --help] [-v, --verbose]"
    print "--output : the name of the file that will contain the tab delimited list of proteins and probabilities"
    print "--prefix : prefix used to identify the decoy hits"
    
def main(argv):
    if( len(argv) < 1):
        sys.stderr.write("Error: Number of arguments incorrect\n")
        usage()
        sys.exit()
    else:
        OutputFile = "output_fido.txt"
        decoy_prefix = ""
        verbose = False
        try:
            opts, args = getopt.getopt(sys.argv[2:], "o:p:hv", ["output=","pattern=", "help", "verbose"])
        except getopt.GetoptError, err:
            # print help information and exit:
            print str(err) # will print something like "option -a not recognized"
            usage()
            sys.exit(2)
        
        for o, a in opts:
            if o == "-v":
                verbose = True
            elif o in ("-h", "--help"):
                usage()
                sys.exit()
            elif o in ("-o", "--output"):
                OutputFile = a
            elif o in ("-p", "--pattern"):
                decoy_prefix = a
            else:
                assert False, "unhandled option"
        
        if(os.path.isfile(argv[0])):
            infile = argv[0]
        else:
            sys.stderr.write("Error: file not found\n")
            sys.exit()
                
        if(verbose):
            print "Reading " + str(argv[0])   
                         
        fidoproteins = utils.readFidoOuput(infile,decoy_prefix)

        if(len(fidoproteins) > 0):
            if(verbose):
                print "writing in " + str(OutputFile)
            utils.writeProteins([v for k,v in fidoproteins.items()],OutputFile)
        else:
            sys.stderr.write("the input file does not contain any information")
            sys.exit()
        
        if(verbose):
            print "Fido file parsed"
            
if __name__ == "__main__":
    main(sys.argv[1:]) 
    